-- Criando as tabelas
CREATE TABLE Professor (
    ProfessorID INT PRIMARY KEY AUTO_INCREMENT,
    Nome VARCHAR(50),
    Sobrenome VARCHAR(80),
    Email VARCHAR(100)
);

CREATE TABLE Curso (
    CursoID INT PRIMARY KEY AUTO_INCREMENT,
    NomeCurso VARCHAR(100),
    ProfessorID INT,
    FOREIGN KEY (ProfessorID) REFERENCES Professor(ProfessorID)
);

CREATE TABLE Aluno (
    AlunoID INT PRIMARY KEY AUTO_INCREMENT,
    Nome VARCHAR(50),
    Sobrenome VARCHAR(80),
    Email VARCHAR(100),
    CursoID INT,
    FOREIGN KEY (CursoID) REFERENCES Curso(CursoID)
);

-- Inserindo dados na tabela Professor --
INSERT INTO Professor (Nome, Sobrenome, Email) VALUES ('Severus', 'Snape', 'severus.snape@hogwarts.com');
INSERT INTO Professor (Nome, Sobrenome, Email) VALUES ('Minerva', 'McGonagall', 'minerva.mcgonagall@hogwarts.com');
INSERT INTO Professor (Nome, Sobrenome, Email) VALUES ('Remus', 'Lupin', 'remus.lupin@hogwarts.com');
INSERT INTO Professor (Nome, Sobrenome, Email) VALUES ('Pomona', 'Sprout', 'pomona.sprout@hogwarts.com');
INSERT INTO Professor (Nome, Sobrenome, Email) VALUES ('Filius', 'Flitwick', 'filius.flitwick@hogwarts.com');

-- Inserindo dados na tabela Curso --
INSERT INTO Curso (NomeCurso, ProfessorID) VALUES ('Poções', 1); 
INSERT INTO Curso (NomeCurso, ProfessorID) VALUES ('Transfiguração', 2); 
INSERT INTO Curso (NomeCurso, ProfessorID) VALUES ('Defesa Contra as Artes das Trevas', 3);
INSERT INTO Curso (NomeCurso, ProfessorID) VALUES ('Herbologia', 4); 
INSERT INTO Curso (NomeCurso, ProfessorID) VALUES ('Feitiços', 5); 

-- Inserindo dados na tabela Aluno --
INSERT INTO Aluno (Nome, Sobrenome, Email, CursoID) VALUES ('Harry', 'Potter', 'harry.potter@dominio.com', 1);
INSERT INTO Aluno (Nome, Sobrenome, Email, CursoID) VALUES ('Hermione', 'Granger', 'hermione.granger@dominio.com', 2);
INSERT INTO Aluno (Nome, Sobrenome, Email, CursoID) VALUES ('Ron', 'Weasley', 'ron.weasley@dominio.com', 3);
INSERT INTO Aluno (Nome, Sobrenome, Email, CursoID) VALUES ('Neville', 'Longbottom', 'neville.longbottom@dominio.com', 4); 
INSERT INTO Aluno (Nome, Sobrenome, Email, CursoID) VALUES ('Luna', 'Lovegood', 'luna.lovegood@dominio.com', 5); 

-- Stored Procedure para inserção de curso
DELIMITER //

CREATE PROCEDURE InserirCurso(
    p_nome_curso VARCHAR(100),
    p_nome_professor VARCHAR(50),
    p_sobrenome_professor VARCHAR(80)
)
BEGIN
    DECLARE professor_id INT;

    -- Verificando se o professor já existe
    SELECT ProfessorID INTO professor_id FROM Professor WHERE Nome = p_nome_professor AND Sobrenome = p_sobrenome_professor;

    -- Se o professor não existir, insere-o
    IF professor_id IS NULL THEN
        INSERT INTO Professor(Nome, Sobrenome)
        VALUES (p_nome_professor, p_sobrenome_professor);
        SET professor_id = LAST_INSERT_ID();
    END IF;

    -- Inserindo o curso
    INSERT INTO Curso(NomeCurso, ProfessorID)
    VALUES (p_nome_curso, professor_id);
END //

DELIMITER ;

-- Stored Procedure para inserção de aluno com email único
DELIMITER //

CREATE PROCEDURE InserirAluno(
    IN p_nome VARCHAR(50),
    IN p_sobrenome VARCHAR(80),
    IN p_curso_id INT
)
BEGIN
    DECLARE nome_completo VARCHAR(100);
    DECLARE novo_email VARCHAR(100);
    DECLARE contador INT;

    -- Concatenando nome e sobrenome
    SET nome_completo = CONCAT(p_nome, ' ', p_sobrenome);

    -- Verificando se o nome já existe na tabela de alunos
    SELECT COUNT(*) INTO contador
    FROM Aluno
    WHERE Nome = p_nome AND Sobrenome = p_sobrenome;

    -- Gerando o email com o número sequencial se necessário
    IF contador > 0 THEN
        SET novo_email = CONCAT(REPLACE(nome_completo, ' ', '.'), contador + 1, '@dominio.com');
    ELSE
        SET novo_email = CONCAT(REPLACE(nome_completo, ' ', '.'), '@dominio.com');
    END IF;

    -- Inserindo o aluno na tabela
    INSERT INTO Aluno(Nome, Sobrenome, Email, CursoID)
    VALUES (p_nome, p_sobrenome, novo_email, p_curso_id);
END //

DELIMITER ;

-- Stored Procedure para seleção de cursos
DELIMITER //

CREATE PROCEDURE SelecionarCursos()
BEGIN
    SELECT * FROM Curso;
END //

DELIMITER ;
